# Generated by Django 2.2.28 on 2025-03-14 21:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('albumName', models.CharField(max_length=255)),
                ('artist', models.CharField(max_length=255)),
                ('releaseDate', models.CharField(max_length=255)),
                ('albumCover', models.ImageField(default='default_cover.jpg', upload_to='albumCover/')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('views', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genreName', models.CharField(max_length=255)),
                ('genreDescription', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('bio', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('profilePicture', models.ImageField(default='default_pro_pic.jpg', upload_to='profilePicture/')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voteType', models.CharField(max_length=255)),
                ('albumID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.Album')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.UserProfile1')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website', models.URLField(blank=True)),
                ('picture', models.ImageField(blank=True, upload_to='profile_images')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewText', models.CharField(max_length=255)),
                ('albumID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.Album')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.UserProfile1')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('url', models.URLField()),
                ('views', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.Category')),
            ],
        ),
        migrations.CreateModel(
            name='GenreAlbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('albumname', models.CharField(max_length=255)),
                ('albumID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.Album')),
                ('genreID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateAdded', models.DateField(max_length=255)),
                ('genreID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.Genre')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.UserProfile1')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteAlbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateAdded', models.DateField(max_length=255)),
                ('albumID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.Album')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rango.UserProfile1')),
            ],
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(fields=('userID', 'albumID'), name='uniqueVoteID'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('userID', 'albumID'), name='uniqueVoteID'),
        ),
        migrations.AddConstraint(
            model_name='genrealbum',
            constraint=models.UniqueConstraint(fields=('genreID', 'albumID'), name='uniqueGenreAlbum'),
        ),
        migrations.AddConstraint(
            model_name='favoritegenre',
            constraint=models.UniqueConstraint(fields=('userID', 'genreID'), name='uniqueFavoriteGenre'),
        ),
        migrations.AddConstraint(
            model_name='favoritealbum',
            constraint=models.UniqueConstraint(fields=('userID', 'albumID'), name='uniqueFavAlbumID'),
        ),
    ]
